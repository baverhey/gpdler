<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
	<!-- Commons DBCP configuration -->
	<!-- First: a connection factory that creates the connections to the database -->
    <!--
        This will load properties from both files, first the defaults, then the other properties.
        Drop a grsloader.properties somewhere on the classpath (copy the one supplied here) and
        your values will override the defaults here.
    -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:grsloader.default.properties</value>
                <value>classpath:grsloader.properties</value>
            </list>
        </property>
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
    </bean>
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="${grs.dburl}" />
		<property name="username" value="${grs.username}" />
		<property name="password" value="${grs.password}" />
	</bean>
    <bean id="xmlDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="url" value="${grs.newdb.dburl}" />
        <property name="username" value="${grs.newdb.username}" />
        <property name="password" value="${grs.newdb.password}" />
    </bean>
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
    <bean id="xmltransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="dataSource" ref="xmlDataSource" />
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <!-- A straight up hibernate session factory, can be used elsewhere -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="xmlDataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                <prop key="hibernate.id.new_generator_mappings">true</prop>
            </props>
        </property>
        <!-- we use hibernate annotations to (hopefully) get everything configured -->
        <property name="packagesToScan" value="net.straininfo2.grs.idloader.bioproject.domain" />
    </bean>
    <!-- hibernateConfiguration is a Configuration object, can be used to dump the config -->
    <!-- Collection class storing categories and providers, based on their name -->
    <bean id="catMap" class="java.util.concurrent.ConcurrentHashMap" />
    <bean id="provMap" class="java.util.concurrent.ConcurrentHashMap" />
	<!-- DB loader classes, which use datasource and transaction manager to manage DB access -->
	<bean id="mappingDbLoader" class="net.straininfo2.grs.idloader.MappingDbLoader" abstract="true">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="namespace" value="${grs.namespace}" />
	</bean>
    <bean id="projInfoLoader" class="net.straininfo2.grs.idloader.db.ProjectInfoLoader" abstract="true">
        <property name="dataSource" ref="dataSource" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="namespace" value="${grs.namespace}" />
    </bean>
    <bean id="derbyMappingDbLoader" class="net.straininfo2.grs.idloader.db.DerbyMappingDbLoader" parent="mappingDbLoader" />
    <bean id="derbyProjInfoLoader" class="net.straininfo2.grs.idloader.db.DerbyProjectInfoLoader" parent="projInfoLoader" />
    <bean id="oracleMappingDbLoader" class="net.straininfo2.grs.idloader.db.OracleMappingDbLoader" parent="mappingDbLoader" />
    <bean id="oracleProjInfoLoader" class="net.straininfo2.grs.idloader.db.OracleProjectInfoLoader" parent="projInfoLoader" />
    <bean id="xmlParser" class="net.straininfo2.grs.idloader.EutilsXmlParser">
        <property name="categoryMap" ref="catMap" />
        <property name="providerMap" ref="provMap" />
    </bean>
	<bean id="loader" class="net.straininfo2.grs.idloader.Loader">
		<property name="mappingDbLoader" ref="${grs.database}MappingDbLoader" />
		<property name="projectInfoLoader" ref="${grs.database}ProjInfoLoader" />
		<property name="email" value="${grs.email}" />
        <property name="xmlParser" ref="xmlParser" />
        <property name="readTimeout" value="${grs.readTimeout}" />
        <property name="connectTimeout" value="${grs.connectTimeout}" />
	</bean>
</beans>